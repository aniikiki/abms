<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aniikiki.abms.dao.system.RoleDao">
    <resultMap id="BaseResultMap" type="RoleEntity">
        <id column="ROLE_ID" jdbcType="VARCHAR" property="roleId"/>
        <result column="ROLE_NAME" jdbcType="VARCHAR" property="roleName"/>
        <result column="ROLE_DESC" jdbcType="VARCHAR" property="roleDesc"/>
        <result column="STATUS" jdbcType="VARCHAR" property="status"/>
        <result column="CREATE_USER" jdbcType="VARCHAR" property="createUser"/>
        <result column="CREATE_TIME" jdbcType="VARCHAR" property="createTime"/>
        <result column="UPDATE_USER" jdbcType="VARCHAR" property="updateUser"/>
        <result column="UPDATE_TIME" jdbcType="VARCHAR" property="updateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        r.role_id, r.role_name, r.role_desc, r.status, r.create_time, r.create_user, r.update_time, r.update_user
    </sql>

    <sql id="Base_Criteria_Clause">
        <where>
            <if test='roleId != null and roleId != ""'>
                and r.role_id = #{roleId, jdbcType = VARCHAR}
            </if>
            <if test='roleName != null and roleName != ""'>
                and instr(r.role_name, #{roleName, jdbcType = VARCHAR}) > 0
            </if>
            <if test='roleDesc != null and roleDesc != ""'>
                and instr(r.role_desc, #{roleDesc, jdbcType = VARCHAR}) > 0
            </if>
            <if test='status != null and status != ""'>
                and r.status = #{status, jdbcType = VARCHAR}
            </if>
            <if test='createUser != null and createUser != ""'>
                and r.create_user = #{createUser, jdbcType = VARCHAR}
            </if>
            <if test='updateUser != null and updateUser != ""'>
                and r.update_user = #{updateUser, jdbcType = VARCHAR}
            </if>
            <if test='excludeRoleId != null and excludeRoleId != ""'>
                and r.role_id != #{excludeRoleId, jdbcType = VARCHAR}
            </if>
        </where>
    </sql>

    <select id="selectByCriteria" parameterType="RoleDto" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List"></include>
        from
            role r
        <include refid="Base_Criteria_Clause"></include>
        order by
            r.role_id
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List"></include>
        from
            role r
        where
            r.role_id = #{roleId, jdbcType=VARCHAR}
    </select>

    <insert id="insert" parameterType="RoleEntity">
        insert into role (
            role_id,
            role_name,
            role_desc,
            status,
            create_user,
            create_time,
            update_user,
            update_time
        ) values (
            #{roleId, jdbcType = VARCHAR},
            #{roleName, jdbcType = VARCHAR},
            #{roleDesc, jdbcType = VARCHAR},
            #{status, jdbcType = VARCHAR},
            #{createUser, jdbcType = VARCHAR},
            #{createTime, jdbcType = VARCHAR},
            #{updateUser, jdbcType = VARCHAR},
            #{updateTime, jdbcType = VARCHAR}
        )
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="RoleEntity">
        update
            role r
        <set>
            <if test='roleName != null and roleName != ""'>
                r.role_name = #{roleName, jdbcType = VARCHAR},
            </if>
            <if test='roleDesc != null and roleDesc != ""'>
                r.role_desc = #{roleDesc, jdbcType = VARCHAR},
            </if>
            <if test='status != null and status != ""'>
                r.status = #{status, jdbcType = VARCHAR},
            </if>
            <if test='updateUser != null and updateUser != ""'>
                r.update_user = #{updateUser, jdbcType = VARCHAR},
            </if>
            <if test='updateTime != null and updateTime != ""'>
                r.update_time = #{updateTime, jdbcType = VARCHAR},
            </if>
        </set>
        where
            r.role_id = #{roleId, jdbcType=VARCHAR}
    </update>
</mapper>